{"version":3,"file":"static/js/621.ff820d18.chunk.js","mappings":"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","sources":["components/MovieItem/MovieItem.jsx","components/MoviesList/MoviesList.jsx","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nexport const MoviesItem = ({ id, title, poster, location }) => {\n  return (\n    <div>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <img src={`https://image.tmdb.org/t/p/w300${poster}`} alt={title} />\n        <p>{title}</p>\n      </Link>\n    </div>\n  );\n};\n","import { MoviesItem } from 'components/MovieItem/MovieItem';\n\nexport const MoviesList = ({ moviesList, location }) => {\n  return (\n    <div>\n      <ul>\n        {moviesList.map(resp => (\n          <li key={resp.id}>\n            <MoviesItem\n              id={resp.id}\n              title={resp.title ?? resp.name}\n              poster={resp.backdrop_path}\n              location={location}\n            />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SearchbarHeader = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: 60%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import {\n  SearchbarHeader,\n  SearchForm,\n  SearchFormButton,\n  SearchFormLabel,\n  SearchFormInput,\n} from './SearchBar.styled';\nimport { ImSearch } from 'react-icons/im';\n\nexport const SearchBar = ({ getQuery }) => {\n  const handleSubmit = event => {\n    event.preventDefault();\n    const value = event.target.elements.searchQuery.value;\n    getQuery({ query: value });\n  };\n\n  return (\n    <SearchbarHeader>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchFormButton type=\"submit\">\n          <ImSearch />\n          <SearchFormLabel className=\"button-label\">Search</SearchFormLabel>\n        </SearchFormButton>\n\n        <SearchFormInput\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          name=\"searchQuery\"\n          placeholder=\"Search images and photos\"\n        />\n      </SearchForm>\n    </SearchbarHeader>\n  );\n};\n","import { SearchBar } from 'components/SearchBar/SearchBar';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchByQuery } from '../../API';\nimport { Loader } from 'components/Loader/Loader';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const queryParams = searchParams.get('query');\n\n    if (!queryParams) {\n      return;\n    }\n\n    const controller = new AbortController();\n\n    async function getMovies() {\n      try {\n        setLoading(true);\n        setError(false);\n        const response = await fetchByQuery(queryParams, controller.signal);\n        setMovies(response.results);\n        setLoading(false);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          setError(true);\n        }\n      }\n    }\n\n    getMovies();\n\n    return () => {\n      controller.abort();\n    };\n  }, [searchParams]);\n\n  return (\n    <div>\n      <SearchBar getQuery={setSearchParams} />\n      {loading && <Loader />}\n      {error && <p>Please, reload the page</p>}\n      {!loading && <MoviesList moviesList={movies} location={location} />}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["MoviesItem","_ref","id","title","poster","location","_jsx","children","_jsxs","Link","to","concat","state","from","src","alt","MoviesList","moviesList","map","resp","_resp$title","name","backdrop_path","SearchbarHeader","styled","_templateObject","_taggedTemplateLiteral","SearchForm","_templateObject2","SearchFormButton","_templateObject3","SearchFormLabel","_templateObject4","SearchFormInput","_templateObject5","SearchBar","getQuery","onSubmit","event","preventDefault","value","target","elements","searchQuery","query","type","ImSearch","className","autoComplete","autoFocus","placeholder","useLocation","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","loading","setLoading","_useState3","_useState4","error","setError","_useState5","_useState6","movies","setMovies","useEffect","queryParams","get","controller","AbortController","_getMovies","apply","arguments","getMovies","abort","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","fetchByQuery","signal","sent","results","t0","code","stop","Loader"],"sourceRoot":""}